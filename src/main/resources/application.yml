spring:
  datasource:
    url: jdbc:postgresql://${DB_SERVER}
    username: ${keyvault.acquirerMDbUsername}
    password: ${keyvault.acquirerMDbPassword}
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  application:
    name: Tkm Acquirer Manager ${HOSTNAME:0}

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:/}

logging:
  level:
    root: ${LOGGING_LEVEL:INFO}
    org:
      hibernate:
        SQL: TRACE
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
  pattern:
    level: "${LOGGING_PATTERN:%p [${spring.application.name}][%X{traceId}|%X{spanId}]}"

azure:
  keyvault:
    enabled: true
    client-id: ${AZURE_KEYVAULT_CLIENT_ID}
    client-key: ${AZURE_KEYVAULT_CLIENT_KEY}
    tenant-id: ${AZURE_KEYVAULT_TENANT_ID}
    uri: ${AZURE_KEYVAULT_URI}
    refresh-interval: 86400000 #24H
  storage:
    default-endpoints-protocol: https
    account-name: ${keyvault.blobAccountName}
    account-key: ${keyvault.blobAccountKey}
    blob-endpoint: ${AZURE_STORAGE_ENDPOINT}
    connection-string: DefaultEndpointsProtocol=${azure.storage.default-endpoints-protocol};AccountName=${keyvault.blobAccountName};AccountKey=${keyvault.blobAccountKey};BlobEndpoint=${azure.storage.blob-endpoint};

keyvault:
  acquirerMDbUsername: ${${AZURE_KEYVAULT_PROFILE:prod}-acquirerMDbUsername}
  acquirerMDbPassword: ${${AZURE_KEYVAULT_PROFILE:prod}-acquirerMDbPassword}
  blobAccountName: ${${AZURE_KEYVAULT_PROFILE:prod}-blobAccountName}
  blobAccountKey: ${${AZURE_KEYVAULT_PROFILE:prod}-blobAccountKey}
  eventhubLogSaslJaasConfig: ${${AZURE_KEYVAULT_PROFILE:prod}-eventhubLogSaslJaasConfig:null}
  acquirerMEventhubReadSaslJaasConfig: ${${AZURE_KEYVAULT_PROFILE:prod}-acquirerMEventhubReadSaslJaasConfig:null}
#  readQueuePrvPgpKey: ${${AZURE_KEYVAULT_PROFILE:prod}-readQueuePrvPgpKey}
#  readQueuePubPgpKey: ${${AZURE_KEYVAULT_PROFILE:prod}-readQueuePubPgpKey}
#  readQueuePrvPgpKeyPassphrase: ${${AZURE_KEYVAULT_PROFILE:prod}-readQueuePrvPgpKeyPassphrase:null}
#  amexClientId: ${${AZURE_KEYVAULT_PROFILE:prod}-amexClientId}
#  amexClientSecret: ${${AZURE_KEYVAULT_PROFILE:prod}-amexClientSecret}
#  visaClientId: ${${AZURE_KEYVAULT_PROFILE:prod}-visaClientId}
#  visaKeyId: ${${AZURE_KEYVAULT_PROFILE:prod}-visaKeyId}
#  visaKeyStorePassword: ${${AZURE_KEYVAULT_PROFILE:prod}-visaKeyStorePassword}
#  visaPassword: ${${AZURE_KEYVAULT_PROFILE:prod}-visaPassword}
#  visaPrivateKey: ${${AZURE_KEYVAULT_PROFILE:prod}-visaPrivateKey}
#  visaServerCertificate: ${${AZURE_KEYVAULT_PROFILE:prod}-visaServerCertificate}
#  visaUserId: ${${AZURE_KEYVAULT_PROFILE:prod}-visaUserId}
#
#blob-storage:
#  visaPublicCert: azure-blob://${BLOB_STORAGE_NAME}/Visa_Public_Cert.p12
#
client-urls:
  card-manager: ${CARD_MANAGER_URL}

#circuit-urls:
#  amex: ${AMEX_URL}
#  visa: ${VISA_URL}

management:
  health:
    db:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "info,health,prometheus"

batch:
  bin-range-gen:
    cron: ${BIN_RANGE_GEN_CRON:-}
    max-rows-in-files: ${BIN_RANGE_GEN_MAX_ROWS_IN_FILES:1000000}