spring:
#  datasource:
#    url: jdbc:postgresql://${DB_SERVER}
#    username: ${keyvault.acquirerMDbUsername}
#    password: ${keyvault.acquirerMDbPassword}
#    driver-class-name: org.postgresql.Driver
#  jpa:
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
  application:
    name: Tkm Acquirer Manager ${HOSTNAME:0}
#  kafka:
#    producer:
#      bootstrap-servers: ${KAFKA_SERVERS}
#      client-id: ${KAFKA_GROUP_ID}${HOSTNAME:0}
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      properties:
#        security:
#          protocol: ${KAFKA_SECURITY_PROTOCOL:SASL_SSL}
#        sasl:
#          mechanism: ${KAFKA_SASL_MECHANISM:PLAIN}
#          jaas:
#            config: ${keyvault.acquirerMEventhubReadSaslJaasConfig}
#    topics:
#      read-queue: ${KAFKA_READ_QUEUE_TOPIC}

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:/}

logging:
  level:
    root: ${LOGGING_LEVEL:INFO}
  pattern:
    level: "${LOGGING_PATTERN:%p [${spring.application.name}][%X{traceId}]}"

azure:
  keyvault:
    enabled: true
    client-id: ${AZURE_KEYVAULT_CLIENT_ID}
    client-key: ${AZURE_KEYVAULT_CLIENT_KEY}
    tenant-id: ${AZURE_KEYVAULT_TENANT_ID}
    uri: ${AZURE_KEYVAULT_URI}
  storage:
    default-endpoints-protocol: https
    connection-string: ${keyvault.blobStorageConnectionString}

keyvault:
  blobStorageConnectionString: ${${AZURE_KEYVAULT_PROFILE:prod}-blobStorageConnectionString}
  eventhubLogSaslJaasConfig: ${${AZURE_KEYVAULT_PROFILE:prod}-eventhubLogSaslJaasConfig:null}
  acquirerMEventhubReadSaslJaasConfig: ${${AZURE_KEYVAULT_PROFILE:prod}-acquirerMEventhubReadSaslJaasConfig:null}
#  readQueuePrvPgpKey: ${${AZURE_KEYVAULT_PROFILE:prod}-readQueuePrvPgpKey}
#  readQueuePubPgpKey: ${${AZURE_KEYVAULT_PROFILE:prod}-readQueuePubPgpKey}
#  readQueuePrvPgpKeyPassphrase: ${${AZURE_KEYVAULT_PROFILE:prod}-readQueuePrvPgpKeyPassphrase:null}
#  amexClientId: ${${AZURE_KEYVAULT_PROFILE:prod}-amexClientId}
#  amexClientSecret: ${${AZURE_KEYVAULT_PROFILE:prod}-amexClientSecret}
#  visaClientId: ${${AZURE_KEYVAULT_PROFILE:prod}-visaClientId}
#  visaKeyId: ${${AZURE_KEYVAULT_PROFILE:prod}-visaKeyId}
#  visaKeyStorePassword: ${${AZURE_KEYVAULT_PROFILE:prod}-visaKeyStorePassword}
#  visaPassword: ${${AZURE_KEYVAULT_PROFILE:prod}-visaPassword}
#  visaPrivateKey: ${${AZURE_KEYVAULT_PROFILE:prod}-visaPrivateKey}
#  visaServerCertificate: ${${AZURE_KEYVAULT_PROFILE:prod}-visaServerCertificate}
#  visaUserId: ${${AZURE_KEYVAULT_PROFILE:prod}-visaUserId}
#
#blob-storage:
#  visaPublicCert: azure-blob://${BLOB_STORAGE_NAME}/Visa_Public_Cert.p12
#
#client-urls:
#  card-manager: ${CARD_MANAGER_URL}
#
#circuit-urls:
#  amex: ${AMEX_URL}
#  visa: ${VISA_URL}

management:
  health:
    db:
      enabled: false
  endpoints:
    web:
      exposure:
        include: "info,health,prometheus"
